
Лабораторна робота №1
Автор: Ветріченко Дарина Ігорівна
Група: КН-924з
Тема: Установка середовища для подальшої роботи з предмету “Програмування”
 Хід виконання роботи

1. Встановлення VirtualBox. 
   Я завантажила VirtualBox з офіційного сайту і встановила його на свій комп'ютер. Установка пройшла успішно, що дозволяє працювати з віртуальними операційними системами.

2. Завантаження образу Linux.
   Образ Ubuntu 22.04 було завантажено з сайту osboxes.org. Після цього я імпортувала образ у VirtualBox і успішно запустила його.

3. Оновлення системи.  
   Після запуску Ubuntu я оновила всі компоненти системи за допомогою команд:  
   ```bash
   sudo apt-get update
   sudo apt-get upgrade
   sudo reboot
   ```

4. Встановлення необхідних утиліт.
   У терміналі були виконані команди для встановлення таких утиліт, як git, gcc, clang, tree тощо:
   ```bash
   sudo apt-get install git gcc clang clang-format clang-tidy tree make check cppcheck valgrind llvm
   ```

5.Створення папок і файлів:
- За допомогою команди mkdir створено папки lab01, src.
- За допомогою команди touch створено файли README.md, Makefile, lab03.txt, main.c.
 Редагування файлів:
- Написання коду виконувалося за допомогою команди nano, що дозволяє редагувати файли безпосередньо у терміналі.
- Код Makefile було скопійовано з проекту sample_project, але друга строка коду була закоментована для сумісності.
 Налаштування структури проекту:
- Використовуючи Makefile, додатково створено директорію dist, що містить виконуваний файл main.bin.
 Запуск програми:
- Програма запускається командою make run у директорії lab01.


6. обота з утилітою tree.  
   У директорії проекту я використала команду `tree`, яка показала структуру файлів у вигляді дерева.
├── Makefile
├── README.md
├── doc
│   └── lab03.txt
└── src
    └── main.c

7. Визначення версій утиліт.  
   Виконала команди:
   ```bash
   clang --version
   make --version
   ```
   Отримала версії:  
   - clang: 14.0.0  
   - make: 4.3

8. Показ змін у Git. 
   Для перегляду змін у файлах використала команду `git diff`, яка показала внесені редагування у проекті.


 Контрольні питання

1. Що таке операційна система? Які операційні системи ви знаєте?**  
   Операційна система — це програмне забезпечення, яке забезпечує керування апаратним забезпеченням комп'ютера та взаємодію користувача з ним.  
   Приклади ОС: Windows, macOS, Linux (Ubuntu, Debian), Android, iOS.

2. Які засоби віртуалізації ОС існують  
   Засоби віртуалізації:  
   - Віртуальні машини: Oracle VirtualBox, VMware Workstation.  
   - Контейнери: Docker, Podman.  
   - Гіпервізори: Microsoft Hyper-V, KVM.

3. Що таке менеджер пакетів? Які менеджери пакетів існують?**  
   Менеджер пакетів — це утиліта для встановлення, оновлення та видалення програм.  
   Приклади:  
   - Linux: APT, YUM.  
   - macOS: Homebrew.  
   - Windows: Chocolatey.  
   - Python: pip.

4. Що таке система контролю версіями? Які існують системи контролю версіями?**  
   Система контролю версіями (VCS) дозволяє відслідковувати зміни у файлах, зберігати їх історію і співпрацювати над проектами.  
   Приклади: Git, Mercurial, Subversion (SVN).

5. Що таке Makefile? Які його ключові обов’язки? Як його використовувати?**  
   Makefile — це файл, що автоматизує збірку проектів. Його обов’язки:  
   - Спрощення процесу компіляції.  
   - Керування залежностями.  
   **Як використовувати:** створити файл Makefile із правилами та виконати `make`.

6. Що робить команда tree?
   Команда `tree` показує структуру директорій та файлів у вигляді дерева.

7. Як дізнатися перелік файлів та даних, що були змінені за допомогою системи контролю версіями git? 
   Для цього використовується команда `git diff`, яка показує різницю між поточним станом файлів і попередніми комітами.



Висновок
Під час виконання роботи я налаштувала середовище для програмування у Linux, ознайомилась із утилітами для роботи у терміналі та навчилась користуватись системою контролю версій. Це створило міцну основу для подальшого навчання.
