Лабораторна робота №7
Автор: Ветріченко Дарина Ігорівна
Група: КН-924з
Тема: Функції

Завдання:
Створити програму для перевірки, чи є число простим.
Створити програму для підрахунку слів у тексті.
Обидві програми повинні використовувати функції для виконання основної задачі.

Основна частина:
Опис роботи програми 1: Перевірка простого числа

Функція isPrime:
Приймає ціле число як параметр.
Повертає 1, якщо число просте, і 0, якщо не просте.
Перевіряє всі можливі дільники числа до його квадратного кореня.
Основна програма:
Якщо аргумент командного рядка передано, він використовується як число для перевірки.
Якщо аргументів немає, використовується значення за замовчуванням (29).
Додатково генерується випадкове число для демонстрації роботи функції.
Результати роботи:

Введене число: 17.
Результат:Перевірка числа 17: Просте
Згенероване число: 42.
Результат:
Перевірка випадкового числа 42: Не просте
Перелік змінних:

wordCount — лічильник слів у тексті (тип int).
i — індекс для перебору символів тексту (тип int).
Дослідження результатів роботи програми:
Опис роботи програми 2: Підрахунок слів у тексті

Функція countWords:
Приймає текст як параметр (const char *).
Аналізує кожен символ тексту.
Збільшує лічильник слів при переході від пробілу до символу.
Повертає кількість слів у тексті.
Основна програма:
Якщо текст передано як аргумент командного рядка, він використовується.
Якщо аргументів немає, використовується текст за замовчуванням.
Додатково обробляється заздалегідь заданий випадковий текст для демонстрації роботи функції.
Результати роботи:

Текст: "Привіт, це демонстраційний текст."
Результат:
Кількість слів: 4
Випадковий текст: "Випадковий текст для перевірки функції."
Результат:
Кількість слів: 5

Структура проекту лабораторної роботи:
.
└── lab07
    ├── Makefile
    ├── README.md
    ├── doc
    │   └── lab07.txt
    └── src
        └── main.c
Контрольні питання та відповіді:
Чому при передачі параметра за значенням усі зміни параметра у функції не відбиваються на значенні аргументу?
При передачі за значенням створюється копія аргументу, тому зміни параметра функції не впливають на оригінальний аргумент.
Скільки операторів return може бути в тілі функції?
У функції може бути кілька операторів return, але виконується лише той, до якого дійде потік виконання.
Що таке “прототип функції”, яке його призначення?
Прототип функції — це її оголошення, яке включає тип результату, ім’я функції та список параметрів. Воно дозволяє компілятору перевірити правильність викликів функції.
Як описати функцію, яка не має значень, що повертаються?
Використовується тип void:
void printMessage() {
    printf("Hello!");
}
Як описати, що функція не має аргументів?
У списку параметрів вказується void:
void printMessage(void);
Наведіть приклад функції, яка не має аргументів та нічого не повертає.
void greet() {
    printf("Привіт, світ!\n");
}
Що робить функція rand? Чому генератор надає “псевдо-випадкові” числа?
Функція rand генерує псевдовипадкові числа, які насправді є результатом обчислень за визначеним алгоритмом. Тому послідовність чисел повторюється, якщо не використано різні початкові значення (seed).
Як забезпечити генерацію іншої послідовності чисел при кожному наступному виконанні програми?
Використати функцію srand із унікальним значенням, наприклад, поточним часом:
srand(time(NULL));
Чим відрізняються бібліотечні функції від функцій користувача?
Бібліотечні функції — це стандартні функції, які надаються мовою програмування.
Функції користувача — це функції, які створюються розробником для виконання конкретних задач.
Які функції називаються варіативними?
Варіативні функції — це функції, які приймають змінну кількість аргументів.
Як визначити список параметрів функції змінної довжини? Наведіть приклад.
Для визначення варіативної функції використовується ... у списку параметрів.
Приклад:
#include <stdarg.h>
int sum(int count, ...) {
    va_list args;
    va_start(args, count);
    int total = 0;
    for (int i = 0; i < count; i++) {
        total += va_arg(args, int);
    }
    va_end(args);
    return total;
}
Висновки:
Під час виконання лабораторної роботи яя набула практичні навички:

Створення функцій для виконання повторюваних задач.
Використання аргументів командного рядка для передачі даних у програму.
Генерації випадкових чисел за допомогою функції rand.
Використання функцій стандартної бібліотеки (isspace, rand, atoi).
Тестування функцій на різних вхідних даних.
